/* global
sails
AuthService
PagingService
*/
module.exports = {
  async find(req, res) {
    try {
      const { query, method, body } = req;
      const { serverSidePaging } = query;
      const modelName = req.options.controller.split("/").reverse()[0];
      const include = [<%= model.queryInclude %>];
      const isPost = method === 'POST';
      let mServerSidePaging = isPost ? body.serverSidePaging : serverSidePaging;
      let mQuery = isPost ? body : query;
      let result;
      if (mServerSidePaging) {
        result = await PagingService.process({ query: mQuery, modelName, include });
      } else {
        const items = await sails.models[modelName].findAll({
          include
        });
        result = { data: { items } };
      }
      return res.ok(result);
    } catch (e) {
      return res.negotiate(e);
    }
  },

  async findOne(req, res) {
    try {
      const { id } = req.params;
      const item = await <%= nameSingularCap %>.findOne({
        where: {
          id
        },
        include: []
      });
      return res.ok({ data: { item } });
    } catch (e) {
      return res.negotiate(e);
    }
  },

  async create(req, res) {
    try {
      let data = req.body;
      const item = await <%= nameSingularCap %>.create(data);
      let message = 'Create success.';
      return res.ok({ message, data: { item } });
    } catch (e) {
      return res.negotiate(e);
    }
  },

  async update(req, res) {
    try {
      const { id } = req.params;
      const data = req.body;
      const message = 'Update success.';
      const item = await <%= nameSingularCap %>.update(data, {
        where: { id, },
      });
      return res.ok({ message, data: { item } });
    } catch (e) {
      return res.negotiate(e);
    }
  },

  async destroy(req, res) {
    try {
      const { id } = req.params;
      const item = await <%= nameSingularCap %>.destroy({ where: { id } });
      let message = 'Delete success';
      return res.ok({ message, data: { item } });
    } catch (e) {
      return res.negotiate(e);
    }
  },
};
